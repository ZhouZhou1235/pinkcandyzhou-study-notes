HTML 超文本标记语言

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
</head>
<body>
 
<h1>我的第一个标题</h1>
 
<p>我的第一个段落。</p>
 
</body>
</html>

<!DOCTYPE html> 声明为 HTML5 文档
<html> 元素是 HTML 页面的根元素
<head> 元素包含了文档的元（meta）数据，如 <meta charset="utf-8"> 定义网页编码格式为 utf-8。
<title> 元素描述了文档的标题
<body> 元素包含了可见的页面内容
<h1> 元素定义一个大标题
<p> 元素定义一个段落

HTML是标记语言

HTML标签
<html>
<b></b>
开始 结束

<html>	定义 HTML 文档
<body>	定义文档的主体
<h1> - <h6>	定义 HTML 标题
<hr>	定义水平线
<!--...-->	定义注释

HTML元素
<p>段落</p>
元素可以嵌套
<br> 空元素 用于换行
<br/> 关闭空元素


HTML网页结构
<html>
<head>
<title>zhou的网页</title>
</head>
<body>
<h1>标题</h1>
<p>段落</p>
</body>
</html>

<!DOCTYPE> 声明
<meta charset="UTF-8">

标题
<h1>这是一个标题</h1>
<h2>这是一个标题</h2>
<h3>这是一个标题</h3>
<hr> 创建水平线
<!-- 这是一个注释 -->

<html>	定义 HTML 文档
<body>	定义文档的主体
<h1> - <h6>	定义 HTML 标题
<hr>	定义水平线
<!--...-->	定义注释

段落
<p>这是一个段落。</p>
<p>这是另外一个段落。</p>

图像
<img decoding="async" src="d:\文件区\资源收集库\神奇宝贝\伊布家族\1691598707694.png" width="1000" height="1000" />

属性
name="value"
例
<a href="http://www.runoob.com">这是一个链接</a>

class	为html元素定义一个或多个类名（classname）(类名从样式文件引入)
id	定义元素的唯一id
style	规定元素的行内样式（inline style）
title	描述了元素的额外信息 (作为工具条使用)

shift+ctrl+i 快速打开开发者工具

格式化
<b>这个文本是加粗的</b>
<strong>这个文本是加粗的</strong>
<big>这个文本字体放大</big>
<em>这个文本是斜体的</em>
<i>这个文本是斜体的</i>
<small>这个文本是缩小的</small>
<sub>下标</sub>
<sup>上标</sup>

<pre>
此例演示如何使用 pre 标签
对空行和    空格
进行控制
</pre>

<code>计算机输出</code>
<kbd>键盘输入</kbd>
<tt>打字机文本</tt>
<samp>计算机代码样本</samp>
<var>计算机变量</var>

<a href="http://www.runoob.com">这是一个链接</a>

缩写
<abbr title="etcetera">etc.</abbr>
<acronym title="World Wide Web">WWW</acronym>

倒序显示
<p><bdo dir="rtl">该段落文字从右到左显示。</bdo></p>  

<p>WWF's goal is to: 
<q>Build a future where people live in harmony with nature.</q>
We hope they succeed.</p>

划去和下划线
<p>My favorite color is <del>blue</del> <ins>red</ins>!</p>

总结

文本格式化
<b>	定义粗体文本
<em>	定义着重文字
<i>	定义斜体字
<small>	定义小号字
<strong>	定义加重语气
<sub>	定义下标字
<sup>	定义上标字
<ins>	定义插入字
<del>	定义删除字

计算机输出
<code>	定义计算机代码
<kbd>	定义键盘码
<samp>	定义计算机代码样本
<var>	定义变量
<pre>	定义预格式文本

引文引用
<abbr>	定义缩写
<address>	定义地址
<bdo>	定义文字方向
<blockquote>	定义长的引用
<q>	定义短的引用语
<cite>	定义引用、引证
<dfn>	定义一个定义项目。


链接
<a href="url">链接文本</a>

使用 target 属性，可以定义被链接的文档在何处显示。
<a href="https://www.runoob.com/" target="_blank" rel="noopener noreferrer">访问菜鸟教程!</a>

<a id="tips">有用的提示部分</a>
<a href="#tips">访问有用的提示部分</a>
<a href="https://www.runoob.com/html/html-links.html#tips">
访问有用的提示部分</a>

图片链接
<p>创建图片链接:
<a href="http://www.runoob.com/html/html-tutorial.html">
<img  border="10" src="smiley.gif" alt="HTML 教程" width="32" height="32"></a></p>

<p>无边框的图片链接:
<a href="http://www.runoob.com/html/html-tutorial.html">
<img border="0" src="smiley.gif" alt="HTML 教程" width="32" height="32"></a></p>

书签的用法
<a href="#C4">查看章节 4</a>
<h2><a id="C4">章节 4</a></h2>

<p>跳出框架?</p> 
<a href="http://www.runoob.com/" target="_top">点击这里!</a> 

创建电子邮件链接
<p>
这是一个电子邮件链接：
<a href="mailto:someone@example.com?Subject=Hello%20again" target="_top">
发送邮件</a>
</p>

<p>
<b>注意:</b> 单词之间空格使用 %20 代替，以确保浏览器可以正常显示文本。
</p>


<a>	定义一个超级链接


头部
<head> 
<meta charset="utf-8"> 
<title>文档标题</title>
</head>

该标签作为HTML文档中所有的链接标签的默认链接
<head>
<base href="http://www.runoob.com/images/" target="_blank">
</head>

<link> 标签定义了文档与外部资源之间的关系
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css">
</head>

<style> 标签定义了HTML文档的样式文件引用地址
<head>
<style type="text/css">
body {
    background-color:yellow;
}
p {
    color:blue
}
</style>
</head>

<meta> 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析
为搜索引擎定义关键词:

<meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript">
为网页定义描述内容:

<meta name="description" content="免费 Web & 编程 教程">
定义网页作者:

<meta name="author" content="Runoob">
每30秒钟刷新当前页面:

<meta http-equiv="refresh" content="30">

<script>标签用于加载脚本文件，如： JavaScript。

总结
<head>	定义了文档的信息
<title>	定义了文档的标题
<base>	定义了页面链接标签的默认链接地址
<link>	定义了一个文档和外部资源之间的关系
<meta>	定义了HTML文档中的元数据
<script>	定义了客户端的脚本文件
<style>	定义了HTML文档的样式文件


样式CSS
使用样式
<head>
<meta charset="utf-8"> 
<title>菜鸟教程(runoob.com)</title>
<style type="text/css">
h1 {color:red;}
p {color:blue;}
</style>
</head>

无下划线的链接
<a href="http://www.runoob.com/" style="text-decoration:none;">访问 runoob.com!</a>

使用外部样式文件格式化文本
<head>
<meta charset="utf-8"> 
<title>菜鸟教程(runoob.com)</title> 
<link rel="stylesheet" type="text/css" href="styles.css">
</head>

CSS 是在 HTML 4 开始使用的,是为了更好的渲染HTML元素而引入的
内联样式- 在HTML元素中使用"style" 属性
内部样式表 -在HTML文档头部 <head> 区域使用<style> 元素 来包含CSS
外部引用 - 使用外部 CSS 文件

内联样式
例
<p style="color:blue;margin-left:20px;">这是一个段落。</p>

例 背景颜色
<body style="background-color:yellow;">
<h2 style="background-color:red;">这是一个标题</h2>
<p style="background-color:green;">这是一个段落。</p>
</body>

例 字体, 字体颜色 ，字体大小
<h1 style="font-family:verdana;">一个标题</h1>
<p style="font-family:arial;color:red;font-size:20px;">一个段落。</p>

文本对齐方式
<h1 style="text-align:center;">居中对齐的标题</h1>
<p>这是一个段落。</p>

内部样式表
例
<head>
<style type="text/css">
body {background-color:yellow;}
p {color:blue;}
</style>
</head>

外部样式表
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css">
</head>

总结
<style>	定义文本样式
<link>	定义资源引用地址


图像
插入图像
<p>
一个图像:
<img src="smiley.gif" alt="Smiley face" width="32" height="32"></p>

<p>
一个动图:
<img src="hackanm.gif" alt="Computer man" width="48" height="48"></p>

<p>
注意插入动图的语法和静态图的语法是一样的。
</p>

从不同位置插入图像
<body>

<p>一个来自文件夹中的图像:</p>
<img src="/images/chrome.gif" alt="Google Chrome" width="33" height="32"><p>一个来自菜鸟教程的图像:</p>
<img src="http://www.runoob.com/images/logo.png" alt="runoob.com" width="336" height="69">

</body>

HTML 图像- 图像标签（ <img>）和源属性（Src）
<img> 是空标签，意思是说，它只包含属性，并且没有闭合标签。
要在页面上显示图像，你需要使用源属性（src）。src 指 "source"。源属性的值是图像的 URL 地址。
语法
<img src="url" alt="some_text">
alt 属性用来为图像定义一串预备的可替换的文本。

设置图像的高度与宽度
<img src="pulpit.jpg" alt="Pulpit rock" width="304" height="228">

浮动图像
<body>

<p>
<img src="smiley.gif" alt="Smiley face" style="float:left" width="32" height="32"> 一个带图片的段落，图片浮动在这个文本的左边。
</p>

<p>
<img src="smiley.gif" alt="Smiley face" style="float:right" width="32" height="32"> 一个带图片的段落，图片浮动在这个文本的右边。
</p>

<p><b>注意:</b> 在这里我们使用了 CSS float 属性，在HTML 4 中 float 属性已废弃，HTML5 已不支持该属性，可以使用 CSS 代替。</p>

</body>

创建图片链接
<body>

<p>创建图片链接:
<a href="http://www.runoob.com/html/html-tutorial.html">
<img  border="10" src="smiley.gif" alt="HTML 教程" width="32" height="32"></a></p>

<p>无边框的图片链接:
<a href="http://www.runoob.com/html/html-tutorial.html">
<img border="0" src="smiley.gif" alt="HTML 教程" width="32" height="32"></a></p>

</body>

创建图片映射
<body>

<p>点击太阳或其他行星，注意变化：</p>

<img src="planets.gif" width="145" height="126" alt="Planets" usemap="#planetmap">

<map name="planetmap">
  <area shape="rect" coords="0,0,82,126" alt="Sun" href="sun.htm">
  <area shape="circle" coords="90,58,3" alt="Mercury" href="mercur.htm">
  <area shape="circle" coords="124,58,8" alt="Venus" href="venus.htm">
</map>

</body>

总结
<img>	定义图像
<map>	定义图像地图
<area>	定义图像地图中的可点击区域


表格
HTML 表格由 <table> 标签来定义。
tr：tr 是 table row 的缩写，表示表格的一行。
td：td 是 table data 的缩写，表示表格的数据单元格。
th：th 是 table header的缩写，表示表格的表头单元格。

<thead > 用于定义表格的标题部分: 在 <thead > 中，使用 <th > 元素定义列的标题，以上实例中列标题分别为"列标题1"，"列标题2"和"列标题3"。

<tbody > 用于定义表格的主体部分: 在 <tbody > 中，使用 <tr > 元素定义行，并在每行中使用 <td > 元素定义单元格数据，以上实例中有两行数据，每行包含三个单元格。
例
<table>
  <thead>
    <tr>
      <th>列标题1</th>
      <th>列标题2</th>
      <th>列标题3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>行1，列1</td>
      <td>行1，列2</td>
      <td>行1，列3</td>
    </tr>
    <tr>
      <td>行2，列1</td>
      <td>行2，列2</td>
      <td>行2，列3</td>
    </tr>
  </tbody>
</table>

例2
<h4>一列:</h4>
<table border="1">
  <tr>
    <td>100</td>
  </tr>
</table>
 
<h4>一行三列:</h4>
<table border="1">
  <tr>
    <td>100</td>
    <td>200</td>
    <td>300</td>
  </tr>
</table>
 
<h4>两行三列:</h4>
<table border="1">
  <tr>
    <td>100</td>
    <td>200</td>
    <td>300</td>
  </tr>
  <tr>
    <td>400</td>
    <td>500</td>
    <td>600</td>
  </tr>
</table>

表格和边框属性
<table border="1">
    <tr>
        <td>Row 1, cell 1</td>
        <td>Row 1, cell 2</td>
    </tr>
</table>

表格表头
<table border="1">
    <tr>
        <th>Header 1</th>
        <th>Header 2</th>
    </tr>
    <tr>
        <td>row 1, cell 1</td>
        <td>row 1, cell 2</td>
    </tr>
    <tr>
        <td>row 2, cell 1</td>
        <td>row 2, cell 2</td>
    </tr>
</table>

合并单元格
<body>

<h4>单元格跨两列:</h4>
<table border="1">
<tr>
  <th>Name</th>
  <th colspan="2">Telephone</th>
</tr>
<tr>
  <td>Bill Gates</td>
  <td>555 77 854</td>
  <td>555 77 855</td>
</tr>
</table>

<h4>单元格跨两行:</h4>
<table border="1">
<tr>
  <th>First Name:</th>
  <td>Bill Gates</td>
</tr>
<tr>
  <th rowspan="2">Telephone:</th>
  <td>555 77 854</td>
</tr>
<tr>
  <td>555 77 855</td>
</tr>
</table>

</body>

表格内的标签
<body>

<table border="1">
<tr>
  <td>
   <p>这是一个段落</p>
   <p>这是另一个段落</p>
  </td>
  <td>这个单元格包含一个表格:
   <table border="1">
   <tr>
     <td>A</td>
     <td>B</td>
   </tr>
   <tr>
     <td>C</td>
     <td>D</td>
   </tr>
   </table>
  </td>
</tr>
<tr>
  <td>这个单元格包含一个列表
   <ul>
    <li>apples</li>
    <li>bananas</li>
    <li>pineapples</li>
   </ul>
  </td>
  <td>HELLO</td>
</tr>
</table>

</body>

格边距
<table border="1" 
cellpadding="10">
<tr>
  <td>First</td>
  <td>Row</td>
</tr>   
<tr>
  <td>Second</td>
  <td>Row</td>
</tr>
</table>

格间距
<body>

<h4>没有单元格间距:</h4>
<table border="1">
<tr>
  <td>First</td>
  <td>Row</td>
</tr>
<tr>
  <td>Second</td>
  <td>Row</td>
</tr>
</table>

<h4>单元格间距="0":</h4>
<table border="1" cellspacing="0">
<tr>
  <td>First</td>
  <td>Row</td>
</tr>
<tr>
  <td>Second</td>
  <td>Row</td>
</tr>
</table>

<h4>单元格间距="10":</h4>
<table border="1" cellspacing="10">
<tr>
  <td>First</td>
  <td>Row</td>
</tr>
<tr>
  <td>Second</td>
  <td>Row</td>
</tr>
</table>

</body>

总结
<table>	定义表格
<th>	定义表格的表头
<tr>	定义表格的行
<td>	定义表格单元
<caption>	定义表格标题
<colgroup>	定义表格列的组
<col>	定义用于表格列的属性
<thead>	定义表格的页眉
<tbody>	定义表格的主体
<tfoot>	定义表格的页脚


列表
<h4>无序列表:</h4>
<ul>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

<h4>有序列表:</h4>
<ol>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ol>

<ol start="50">
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ol>

<h4>自定义列表:</h4>
<dl>
<dt>Coffee</dt>
<dd>- black hot drink</dd>
<dt>Milk</dt>
<dd>- white cold drink</dd>
</dl>

不同类型的列表
<h4>编号列表：</h4>
<ol>
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ol>  

<h4>大写字母列表：</h4>
<ol type="A">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ol>  

<h4>小写字母列表：</h4>
<ol type="a">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ol>  

<h4>罗马数字列表：</h4>
<ol type="I">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ol>  

<h4>小写罗马数字列表：</h4>
<ol type="i">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ol>  

<h4>圆点列表：</h4>
<ul style="list-style-type:disc">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ul>  

<h4>圆圈列表：</h4>
<ul style="list-style-type:circle">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ul>  

<h4>正方形列表：</h4>
<ul style="list-style-type:square">
 <li>Apples</li>
 <li>Bananas</li>
 <li>Lemons</li>
 <li>Oranges</li>
</ul>

<h4>嵌套列表：</h4>
<ul>
  <li>Coffee</li>
  <li>Tea
    <ul>
      <li>Black tea</li>
      <li>Green tea</li>
    </ul>
  </li>
  <li>Milk</li>
</ul>
<ul>
  <li>Coffee</li>
  <li>Tea
    <ul>
      <li>Black tea</li>
      <li>Green tea
        <ul>
          <li>China</li>
          <li>Africa</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Milk</li>
</ul>

总结
<ol>	定义有序列表
<ul>	定义无序列表
<li>	定义列表项
<dl>	定义列表
<dt>	自定义列表项目
<dd>	定义自定列表项的描述


区块
大多数 HTML 元素被定义为块级元素或内联元素
块级元素 <h1>, <p>, <ul>, <table>
内联元素 <b>, <td>, <a>, <img>

HTML <div> 元素是块级元素，它可用于组合其他 HTML 元素的容器。
HTML <span> 元素是内联元素，可用作文本的容器

总结
<div>	定义了文档的区域，块级 (block-level)
<span>	用来组合文档中的行内元素， 内联元素(inline)


布局
使用 <div> 元素的网页布局
<body>

<div id="container" style="width:500px">

<div id="header" style="background-color:#FFA500;">
<h1 style="margin-bottom:0;">主要的网页标题</h1></div>

<div id="menu" style="background-color:#FFD700;height:200px;width:100px;float:left;">
<b>菜单</b><br>
HTML<br>
CSS<br>
JavaScript</div>

<div id="content" style="background-color:#EEEEEE;height:200px;width:400px;float:left;">
内容在这里</div>

<div id="footer" style="background-color:#FFA500;clear:both;text-align:center;">
版权 © runoob.com</div>

</div>

</body>	

使用 <table> 元素的网页布局
<body>

<table width="500" border="0">
<tr>
<td colspan="2" style="background-color:#FFA500;">
<h1>主要的网页标题</h1>
</td>
</tr>

<tr>
<td style="background-color:#FFD700;width:100px;vertical-align:top;">
<b>菜单</b><br>
HTML<br>
CSS<br>
JavaScript
</td>
<td style="background-color:#eeeeee;height:200px;width:400px;vertical-align:top;">
内容在这里</td>
</tr>

<tr>
<td colspan="2" style="background-color:#FFA500;text-align:center;">
版权 © runoob.com</td>
</tr>
</table>

</body>

总结
<div>	定义文档区块，块级(block-level)
<span>	定义 span，用来组合文档中的行内元素。


表单
HTML 表单用于收集用户的输入信息

表单是一个包含表单元素的区域。

表单元素是允许用户在表单中输入内容，比如：文本域（textarea）、下拉列表（select）、单选框（radio-buttons）、复选框（checkbox） 等等。

语法
<form>
.
input 元素
.
</form>

文本域
<form action="">
First name: <input type="text" name="firstname"><br>
Last name: <input type="text" name="lastname">
</form>

密码字段
<form>
Password: <input type="password" name="pwd">
</form>

单选按钮
<form action="">
<input type="radio" name="sex" value="male">男<br>
<input type="radio" name="sex" value="female">女
</form>

复选框
<form>
<input type="checkbox" name="vehicle" value="Bike">我喜欢自行车<br>
<input type="checkbox" name="vehicle" value="Car">我喜欢小汽车
</form>

提交按钮
<form name="input" action="html_form_action.php" method="get">
Username: <input type="text" name="user">
<input type="submit" value="Submit">
</form>

post：指的是 HTTP POST 方法，表单数据会包含在表单体内然后发送给服务器，用于提交敏感数据，如用户名与密码等。

get：默认值，指的是 HTTP GET 方法，表单数据会附加在 action 属性的 URL 中，并以 ?作为分隔符，一般用于不敏感信息，如分页等。例如：https://www.runoob.com/?page=1，这里的 page=1 就是 get 方法提交的数据。

例
<!-- 以下表单使用 GET 请求发送数据到当前的 URL，method 默认位 GET。 -->
<form>
  <label>Name:
    <input name="submitted-name" autocomplete="name">
  </label>
  <button>Save</button>
</form>

<!-- 以下表单使用 POST 请求发送数据到当前的 URL。 -->
<form method="post">
  <label>Name:
    <input name="submitted-name" autocomplete="name">
  </label>
  <button>Save</button>
</form>

<!-- 表单使用 fieldset, legend, 和 label 标签 -->
<form method="post">
  <fieldset>
    <legend>Title</legend>
    <label><input type="radio" name="radio"> Select me</label>
  </fieldset>
</form>

<body>

含边框的表单
<form action="">
<fieldset>
<legend>Personal information:</legend>
Name: <input type="text" size="30"><br>
E-mail: <input type="text" size="30"><br>
Date of birth: <input type="text" size="10">
</fieldset>
</form>

</body>

带有输入框和确认按钮的表单
<body>

<form action="demo-form.php">
First name: <input type="text" name="FirstName" value="Mickey"><br>
Last name: <input type="text" name="LastName" value="Mouse"><br>
<input type="submit" value="提交">
</form>

<p>点击"提交"按钮，表单数据将被发送到服务器上的“demo-form.php”。</p>

</body>

带有复选框的表单
<body>

<form action="demo-form.php" method="get">
  <input type="checkbox" name="vehicle[]" value="Bike"> I have a bike<br>
  <input type="checkbox" name="vehicle[]" value="Car" checked="checked"> I have a car<br>
  <input type="submit" value="提交">
</form>

</body>

带有单选按钮的表单
<body>

<form action="demo-form.php" method="get">
  <input type="radio" name="sex" value="Male"> Male<br>
  <input type="radio" name="sex" value="Female" checked="checked"> Female<br>
  <input type="submit" value="提交">
</form>

</body>

从表单发送电子邮件
<body>

<h3>发送邮件到 someone@example.com:</h3>

<form action="MAILTO:someone@example.com" method="post" enctype="text/plain">
Name:<br>
<input type="text" name="name" value="your name"><br>
E-mail:<br>
<input type="text" name="mail" value="your email"><br>
Comment:<br>
<input type="text" name="comment" value="your comment" size="50"><br><br>
<input type="submit" value="发送">
<input type="reset" value="重置">
</form>

</body>

总结
<form>	定义供用户输入的表单
<input>	定义输入域
<textarea>	定义文本域 (一个多行的输入控件)
<label>	定义了 <input> 元素的标签，一般为输入标题
<fieldset>	定义了一组相关的表单元素，并使用外框包含起来
<legend>	定义了 <fieldset> 元素的标题
<select>	定义了下拉选项列表
<optgroup>	定义选项组
<option>	定义下拉列表中的选项
<button>	定义一个点击按钮
<datalist>New	指定一个预先定义的输入控件选项列表
<keygen>New	定义了表单的密钥对生成器字段
<output>New	定义一个计算结果


框架
<iframe src="URL"></iframe>

设置高和宽
<iframe src="demo_iframe.htm" width="200" height="200"></iframe>

移除边框
<iframe src="demo_iframe.htm" frameborder="0"></iframe>

显示链接页面
<iframe src="demo_iframe.htm" name="iframe_a"></iframe>
<p><a href="https://www.runoob.com" target="iframe_a" rel="noopener">RUNOOB.COM</a></p>

总结
<iframe>	定义一个内联的iframe


颜色
	#000000	rgb(0,0,0)
 	#FF0000	rgb(255,0,0)
 	#00FF00	rgb(0,255,0)
 	#0000FF	rgb(0,0,255)
 	#FFFF00	rgb(255,255,0)
 	#00FFFF	rgb(0,255,255)
 	#FF00FF	rgb(255,0,255)
 	#C0C0C0	rgb(192,192,192)
 	#FFFFFF	rgb(255,255,255)

Web安全色
最初，216 跨平台 web 安全色被用来确保：当计算机使用 256 色调色板时，所有的计算机能够正确地显示所有的颜色。


颜色名
HTML支持以下颜色名
AliceBlue 	#F0F8FF	 
AntiqueWhite 	#FAEBD7	 
Aqua 	#00FFFF	 
Aquamarine 	#7FFFD4	 
Azure 	#F0FFFF	 
Beige 	#F5F5DC	 
Bisque 	#FFE4C4	 
Black 	#000000	 
BlanchedAlmond 	#FFEBCD	 
Blue 	#0000FF	 
BlueViolet 	#8A2BE2	 
Brown 	#A52A2A	 
BurlyWood 	#DEB887	 
CadetBlue 	#5F9EA0	 
Chartreuse 	#7FFF00	 
Chocolate 	#D2691E	 
Coral 	#FF7F50	 
CornflowerBlue 	#6495ED	 
Cornsilk 	#FFF8DC	 
Crimson 	#DC143C	 
Cyan 	#00FFFF	 
DarkBlue 	#00008B	 
DarkCyan 	#008B8B	 
DarkGoldenRod 	#B8860B	 
DarkGray 	#A9A9A9	 
DarkGreen 	#006400	 
DarkKhaki 	#BDB76B	 
DarkMagenta 	#8B008B	 
DarkOliveGreen 	#556B2F	 
DarkOrange 	#FF8C00	 
DarkOrchid 	#9932CC	 
DarkRed 	#8B0000	 
DarkSalmon 	#E9967A	 
DarkSeaGreen 	#8FBC8F	 
DarkSlateBlue 	#483D8B	 
DarkSlateGray 	#2F4F4F	 
DarkTurquoise 	#00CED1	 
DarkViolet 	#9400D3	 
DeepPink 	#FF1493	 
DeepSkyBlue 	#00BFFF	 
DimGray 	#696969	 
DodgerBlue 	#1E90FF	 
FireBrick 	#B22222	 
FloralWhite 	#FFFAF0	 
ForestGreen 	#228B22	 
Fuchsia 	#FF00FF	 
Gainsboro 	#DCDCDC	 
GhostWhite 	#F8F8FF	 
Gold 	#FFD700	 
GoldenRod 	#DAA520	 
Gray 	#808080	 
Green 	#008000	 
GreenYellow 	#ADFF2F	 
HoneyDew 	#F0FFF0	 
HotPink 	#FF69B4	 
IndianRed  	#CD5C5C	 
Indigo  	#4B0082	 
Ivory 	#FFFFF0	 
Khaki 	#F0E68C	 
Lavender 	#E6E6FA	 
LavenderBlush 	#FFF0F5	 
LawnGreen 	#7CFC00	 
LemonChiffon 	#FFFACD	 
LightBlue 	#ADD8E6	 
LightCoral 	#F08080	 
LightCyan 	#E0FFFF	 
LightGoldenRodYellow 	#FAFAD2	 
LightGray 	#D3D3D3	 
LightGreen 	#90EE90	 
LightPink 	#FFB6C1	 
LightSalmon 	#FFA07A	 
LightSeaGreen 	#20B2AA	 
LightSkyBlue 	#87CEFA	 
LightSlateGray 	#778899	 
LightSteelBlue 	#B0C4DE	 
LightYellow 	#FFFFE0	 
Lime 	#00FF00	 
LimeGreen 	#32CD32	 
Linen 	#FAF0E6	 
Magenta 	#FF00FF	 
Maroon 	#800000	 
MediumAquaMarine 	#66CDAA	 
MediumBlue 	#0000CD	 
MediumOrchid 	#BA55D3	 
MediumPurple 	#9370DB	 
MediumSeaGreen 	#3CB371	 
MediumSlateBlue 	#7B68EE	 
MediumSpringGreen 	#00FA9A	 
MediumTurquoise 	#48D1CC	 
MediumVioletRed 	#C71585	 
MidnightBlue 	#191970	 
MintCream 	#F5FFFA	 
MistyRose 	#FFE4E1	 
Moccasin 	#FFE4B5	 
NavajoWhite 	#FFDEAD	 
Navy 	#000080	 
OldLace 	#FDF5E6	 
Olive 	#808000	 
OliveDrab 	#6B8E23	 
Orange 	#FFA500	 
OrangeRed 	#FF4500	 
Orchid 	#DA70D6	 
PaleGoldenRod 	#EEE8AA	 
PaleGreen 	#98FB98	 
PaleTurquoise 	#AFEEEE	 
PaleVioletRed 	#DB7093	 
PapayaWhip 	#FFEFD5	 
PeachPuff 	#FFDAB9	 
Peru 	#CD853F	 
Pink 	#FFC0CB	 
Plum 	#DDA0DD	 
PowderBlue 	#B0E0E6	 
Purple 	#800080	 
Red 	#FF0000	 
RosyBrown 	#BC8F8F	 
RoyalBlue 	#4169E1	 
SaddleBrown 	#8B4513	 
Salmon 	#FA8072	 
SandyBrown 	#F4A460	 
SeaGreen 	#2E8B57	 
SeaShell 	#FFF5EE	 
Sienna 	#A0522D	 
Silver 	#C0C0C0	 
SkyBlue 	#87CEEB	 
SlateBlue 	#6A5ACD	 
SlateGray 	#708090	 
Snow 	#FFFAFA	 
SpringGreen 	#00FF7F	 
SteelBlue 	#4682B4	 
Tan 	#D2B48C	 
Teal 	#008080	 
Thistle 	#D8BFD8	 
Tomato 	#FF6347	 
Turquoise 	#40E0D0	 
Violet 	#EE82EE	 
Wheat 	#F5DEB3	 
White 	#FFFFFF	 
WhiteSmoke 	#F5F5F5	 
Yellow 	#FFFF00	 
YellowGreen 	#9ACD32


颜色值
颜色值
颜色值由十六进制来表示红、绿、蓝（RGB）。

每个颜色的最低值为 0(十六进制为 00)，最高值为 255(十六进制为FF)。

十六进制值的写法为 # 号后跟三个或六个十六进制字符。

三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。


脚本
插入脚本
<script>
document.write("Hello World!")
</script> 

<body>

<script>
document.write("Hello World!")
</script>
<noscript>抱歉，你的浏览器不支持 JavaScript!</noscript>

<p>不支持 JavaScript 的浏览器会使用 &lt;noscript&gt; 元素中定义的内容（文本）来替代。</p>
 
</body>

HTML <script> 标签
<script> 标签用于定义客户端脚本，比如 JavaScript。

<script> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。

JavaScript 最常用于图片操作、表单验证以及内容动态更新。


字符实体
在 HTML 中，某些字符是预留的。
在 HTML 中不能使用小于号（<）和大于号（>），这是因为浏览器会误认为它们是标签。

空格  &nbsp
小于号 &lt

结合音标符
 ̀	a	a&#768;	à
  ́	a	a&#769;	á
̂	a	a&#770;	â
  ̃	a	a&#771;	ã
  ̀	O	O&#768;	Ò
  ́	O	O&#769;	Ó
̂	O	O&#770;	Ô
  ̃	O	O&#771;	Õ

字符实体
	空格	&nbsp;	&#160;
<	小于号	&lt;	&#60;
>	大于号	&gt;	&#62;
&	和号	&amp;	&#38;
"	引号	&quot;	&#34;
'	撇号 	&apos; (IE不支持)	&#39;
￠	分	&cent;	&#162;
£	镑	&pound;	&#163;
¥	人民币/日元	&yen;	&#165;
€	欧元	&euro;	&#8364;
§	小节	&sect;	&#167;
©	版权	&copy;	&#169;
®	注册商标	&reg;	&#174;
™	商标	&trade;	&#8482;
×	乘号	&times;	&#215;
÷	除号	&divide;	&#247;


统一资源定位器 URL
URL是一个网页地址
语法
scheme://host.domain:port/path/filename
scheme - 定义因特网服务的类型。最常见的类型是 http
host - 定义域主机（http 的默认主机是 www）
domain - 定义因特网域名，比如 runoob.com
:port - 定义主机上的端口号（http 的默认端口号是 80）
path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。
filename - 定义文档/资源的名称

常见的 URL Scheme
http	超文本传输协议	以 http:// 开头的普通网页。不加密。
https	安全超文本传输协议	安全网页，加密所有信息交换。
ftp	文件传输协议	用于将文件下载或上传至网站。
file	 	您计算机上的文件。

URL 只能使用 ASCII 字符集


HTML 速查列表
HTML 速查列表. 你可以打印它，以备日常使用。

HTML 基本文档
<!DOCTYPE html>
<html>
<head>
<title>文档标题</title>
</head>
<body>
可见文本...
</body>
</html>
基本标签（Basic Tags）
<h1>最大的标题</h1>
<h2> . . . </h2>
<h3> . . . </h3>
<h4> . . . </h4>
<h5> . . . </h5>
<h6>最小的标题</h6>
 
<p>这是一个段落。</p>
<br> （换行）
<hr> （水平线）
<!-- 这是注释 -->
文本格式化（Formatting）
<b>粗体文本</b>
<code>计算机代码</code>
<em>强调文本</em>
<i>斜体文本</i>
<kbd>键盘输入</kbd> 
<pre>预格式化文本</pre>
<small>更小的文本</small>
<strong>重要的文本</strong>
 
<abbr> （缩写）
<address> （联系信息）
<bdo> （文字方向）
<blockquote> （从另一个源引用的部分）
<cite> （工作的名称）
<del> （删除的文本）
<ins> （插入的文本）
<sub> （下标文本）
<sup> （上标文本）
链接（Links）
普通的链接：<a href="http://www.example.com/">链接文本</a>
图像链接： <a href="http://www.example.com/"><img decoding="async" src="URL" alt="替换文本"></a>
邮件链接： <a href="mailto:webmaster@example.com">发送e-mail</a>
书签：
<a id="tips">提示部分</a>
<a href="#tips">跳到提示部分</a>
图片（Images）
<img decoding="async" src="URL" alt="替换文本" height="42" width="42">
样式/区块（Styles/Sections）
<style type="text/css">
h1 {color:red;}
p {color:blue;}
</style>
<div>文档中的块级元素</div>
<span>文档中的内联元素</span>
无序列表
<ul>
    <li>项目</li>
    <li>项目</li>
</ul>
有序列表
<ol>
    <li>第一项</li>
    <li>第二项</li>
</ol>
定义列表
<dl>
  <dt>项目 1</dt>
    <dd>描述项目 1</dd>
  <dt>项目 2</dt>
    <dd>描述项目 2</dd>
</dl>
表格（Tables）
<table border="1">
  <tr>
    <th>表格标题</th>
    <th>表格标题</th>
  </tr>
  <tr>
    <td>表格数据</td>
    <td>表格数据</td>
  </tr>
</table>
框架（Iframe）
<iframe src="demo_iframe.htm"></iframe>
表单（Forms）
<form action="demo_form.php" method="post/get">
<input type="text" name="email" size="40" maxlength="50">
<input type="password">
<input type="checkbox" checked="checked">
<input type="radio" checked="checked">
<input type="submit" value="Send">
<input type="reset">
<input type="hidden">
<select>
<option>苹果</option>
<option selected="selected">香蕉</option>
<option>樱桃</option>
</select>
<textarea name="comment" rows="60" cols="20"></textarea>
 
</form>
实体（Entities）
&lt; 等同于 <
&gt; 等同于 >
&#169; 等同于 ©


HTML 标签简写及全称
下表列出了 HTML 标签简写及全称：

标签	英文全称	中文说明
a	Anchor	锚
abbr	Abbreviation	缩写词
acronym	Acronym	取首字母的缩写词
address	Address	地址
alt	alter	替用(一般是图片显示不出的提示)
b	Bold	粗体（文本）
bdo	Bi-Directional Override	文本显示方向
big	Big	变大（文本）
blockquote	Block Quotation	区块引用语
br	Break	换行
cell	cell	巢
cellpadding	cellpadding	巢补白
cellspacing	cellspacing	巢空间
center	Centered	居中（文本）
cite	Citation	引用
code	Code	源代码（文本）
dd	Definition Description	定义描述
del	Deleted	删除（的文本）
dfn	Defines a Definition Term	定义定义条目
div	Division	分隔
dl	Definition List	定义列表
dt	Definition Term	定义术语
em	Emphasized	加重（文本）
font	Font	字体
h1~h6	Header 1 to Header 6	标题1到标题6
hr	Horizontal Rule	水平尺
href	hypertext reference	超文本引用
i	Italic	斜体（文本）
iframe	Inline frame	定义内联框架
ins	Inserted	插入（的文本）
kbd	Keyboard	键盘（文本）
li	List Item	列表项目
nl	navigation lists	导航列表
ol	Ordered List	排序列表
optgroup	Option group	定义选项组
p	Paragraph	段落
pre	Preformatted	预定义格式（文本 ）
q	Quotation	引用语
rel	Reload	加载
s/ strike	Strikethrough	删除线
samp	Sample	示例（文本
small	Small	变小（文本）
span	Span	范围
src	Source	源文件链接
strong	Strong	加重（文本）
sub	Subscripted	下标（文本）
sup	Superscripted	上标（文本）
td	table data cell	表格中的一个单元格
th	table header cell	表格中的表头
tr	table row	表格中的一行
tt	Teletype	打印机（文本）
u	Underlined	下划线（文本）
ul	Unordered List	不排序列表
var	Variable	变量（文本）


学习 CSS
学习 JavaScript